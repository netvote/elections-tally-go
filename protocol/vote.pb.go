// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vendor/github.com/netvote/elections-solidity/protocol/vote.proto

/*
Package netvote is a generated protocol buffer package.

It is generated from these files:
	vendor/github.com/netvote/elections-solidity/protocol/vote.proto

It has these top-level messages:
	VoteChoice
	BallotVote
	Vote
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VoteChoice struct {
	// Types that are valid to be assigned to Choice:
	//	*VoteChoice_Selection
	//	*VoteChoice_WriteIn
	Choice isVoteChoice_Choice `protobuf_oneof:"choice"`
}

func (m *VoteChoice) Reset()                    { *m = VoteChoice{} }
func (m *VoteChoice) String() string            { return proto.CompactTextString(m) }
func (*VoteChoice) ProtoMessage()               {}
func (*VoteChoice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isVoteChoice_Choice interface {
	isVoteChoice_Choice()
}

type VoteChoice_Selection struct {
	Selection uint32 `protobuf:"varint,1,opt,name=selection,oneof"`
}
type VoteChoice_WriteIn struct {
	WriteIn string `protobuf:"bytes,2,opt,name=write_in,json=writeIn,oneof"`
}

func (*VoteChoice_Selection) isVoteChoice_Choice() {}
func (*VoteChoice_WriteIn) isVoteChoice_Choice()   {}

func (m *VoteChoice) GetChoice() isVoteChoice_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *VoteChoice) GetSelection() uint32 {
	if x, ok := m.GetChoice().(*VoteChoice_Selection); ok {
		return x.Selection
	}
	return 0
}

func (m *VoteChoice) GetWriteIn() string {
	if x, ok := m.GetChoice().(*VoteChoice_WriteIn); ok {
		return x.WriteIn
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*VoteChoice) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _VoteChoice_OneofMarshaler, _VoteChoice_OneofUnmarshaler, _VoteChoice_OneofSizer, []interface{}{
		(*VoteChoice_Selection)(nil),
		(*VoteChoice_WriteIn)(nil),
	}
}

func _VoteChoice_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*VoteChoice)
	// choice
	switch x := m.Choice.(type) {
	case *VoteChoice_Selection:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Selection))
	case *VoteChoice_WriteIn:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.WriteIn)
	case nil:
	default:
		return fmt.Errorf("VoteChoice.Choice has unexpected type %T", x)
	}
	return nil
}

func _VoteChoice_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*VoteChoice)
	switch tag {
	case 1: // choice.selection
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Choice = &VoteChoice_Selection{uint32(x)}
		return true, err
	case 2: // choice.write_in
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Choice = &VoteChoice_WriteIn{x}
		return true, err
	default:
		return false, nil
	}
}

func _VoteChoice_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*VoteChoice)
	// choice
	switch x := m.Choice.(type) {
	case *VoteChoice_Selection:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Selection))
	case *VoteChoice_WriteIn:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.WriteIn)))
		n += len(x.WriteIn)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BallotVote struct {
	Choices []*VoteChoice `protobuf:"bytes,1,rep,name=choices" json:"choices,omitempty"`
}

func (m *BallotVote) Reset()                    { *m = BallotVote{} }
func (m *BallotVote) String() string            { return proto.CompactTextString(m) }
func (*BallotVote) ProtoMessage()               {}
func (*BallotVote) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BallotVote) GetChoices() []*VoteChoice {
	if m != nil {
		return m.Choices
	}
	return nil
}

type Vote struct {
	EncryptionSeed uint64        `protobuf:"varint,1,opt,name=encryption_seed,json=encryptionSeed" json:"encryption_seed,omitempty"`
	BallotVotes    []*BallotVote `protobuf:"bytes,2,rep,name=ballot_votes,json=ballotVotes" json:"ballot_votes,omitempty"`
}

func (m *Vote) Reset()                    { *m = Vote{} }
func (m *Vote) String() string            { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()               {}
func (*Vote) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Vote) GetEncryptionSeed() uint64 {
	if m != nil {
		return m.EncryptionSeed
	}
	return 0
}

func (m *Vote) GetBallotVotes() []*BallotVote {
	if m != nil {
		return m.BallotVotes
	}
	return nil
}

func init() {
	proto.RegisterType((*VoteChoice)(nil), "netvote.VoteChoice")
	proto.RegisterType((*BallotVote)(nil), "netvote.BallotVote")
	proto.RegisterType((*Vote)(nil), "netvote.Vote")
}

func init() {
	proto.RegisterFile("vendor/github.com/netvote/elections-solidity/protocol/vote.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcf, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0xd7, 0x39, 0xd6, 0xed, 0x9b, 0x3f, 0x20, 0x5e, 0x0a, 0x82, 0x94, 0x5e, 0xec, 0x65,
	0x0d, 0x28, 0x78, 0xf1, 0x22, 0xf3, 0x32, 0xaf, 0x19, 0x78, 0x2d, 0x36, 0xfd, 0xd8, 0x02, 0x31,
	0xdf, 0x68, 0x3e, 0x27, 0xfb, 0xef, 0xa5, 0x71, 0x35, 0xb0, 0x5b, 0xf2, 0xf2, 0xe6, 0x79, 0x5e,
	0x02, 0xaf, 0x07, 0x74, 0x2d, 0x75, 0x72, 0x6b, 0x78, 0xf7, 0xdd, 0x54, 0x9a, 0xbe, 0xa4, 0x43,
	0x3e, 0x10, 0xa3, 0x44, 0x8b, 0x9a, 0x0d, 0x39, 0xbf, 0xf4, 0x64, 0x4d, 0x6b, 0xf8, 0x28, 0xf7,
	0x1d, 0x31, 0x69, 0xb2, 0xb2, 0x2f, 0x54, 0xe1, 0x26, 0xd2, 0x53, 0xbf, 0xd8, 0x00, 0x7c, 0x10,
	0xe3, 0xdb, 0x8e, 0x8c, 0x46, 0x71, 0x0f, 0x73, 0x3f, 0x10, 0xb2, 0x24, 0x4f, 0xca, 0xab, 0xf5,
	0x48, 0xc5, 0x48, 0xdc, 0xc1, 0xec, 0xa7, 0x33, 0x8c, 0xb5, 0x71, 0xd9, 0x38, 0x4f, 0xca, 0xf9,
	0x7a, 0xa4, 0xd2, 0x90, 0xbc, 0xbb, 0xd5, 0x0c, 0xa6, 0x3a, 0x60, 0x8a, 0x17, 0x80, 0xd5, 0xa7,
	0xb5, 0xc4, 0x3d, 0x5a, 0x2c, 0x21, 0xfd, 0xcb, 0x7d, 0x96, 0xe4, 0x17, 0xe5, 0xe2, 0xf1, 0xb6,
	0x3a, 0xd9, 0xab, 0xa8, 0x56, 0x43, 0xa7, 0xd8, 0xc2, 0x24, 0x3c, 0x7b, 0x80, 0x1b, 0x74, 0xba,
	0x3b, 0xee, 0x7b, 0x73, 0xed, 0x11, 0xdb, 0xb0, 0x68, 0xa2, 0xae, 0x63, 0xbc, 0x41, 0x6c, 0xc5,
	0x33, 0x5c, 0x36, 0xc1, 0x56, 0xf7, 0x4c, 0x9f, 0x8d, 0xcf, 0x24, 0x71, 0x8a, 0x5a, 0x34, 0xff,
	0x67, 0xdf, 0x4c, 0xc3, 0x57, 0x3c, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0xf5, 0xa2, 0x44, 0x5c,
	0x4e, 0x01, 0x00, 0x00,
}
